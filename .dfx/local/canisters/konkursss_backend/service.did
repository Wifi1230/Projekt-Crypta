type CryptoEntry = record {
  name: text;
  shortcut: text;
  icon: text;
};
type AccEntry = record {
    username: text;
    email: text;
    password: text;
};
type WpisAll = record {
    post_text: text;
    selected_crypto: text;
    prediction: text;
    likes: nat32; 
    dislikes: nat32;
    username: text;
};
type Comment = record {
  text: text;
  username: text;
  likes: nat32;
  dislikes: nat32;
  wpis_index: nat64;
};
type Result = variant { Ok; Err: text };
service : {
    // Funkcje wpisów
    "dodaj_wpis": (WpisAll) -> ();
    "odczytaj_wpisy": () -> (vec WpisAll) query;
    "usun_wpis": (nat64) -> ();
    "edytuj_wpis": (nat64, text) -> ();
    "like_wpis": (text, nat64) -> ();
    "dislike_wpis": (text, nat64) -> (); 
    "user_has_liked": (text, nat64) -> (bool) query;
    "user_has_disliked": (text, nat64) -> (bool) query;

    // Funkcje dla kryptowalut
    "add_crypto": (CryptoEntry) -> ();
    "get_all_cryptos": () -> (vec CryptoEntry) query;

    // Funkcje dla kont użytkowników
    "add_account": (AccEntry) -> (Result);
    "get_all_accounts": () -> (vec AccEntry) query;

    // Nowe funkcje dla komentarzy
    "dodaj_komentarz": (nat64, Comment) -> ();
    "odczytaj_komentarze": (nat64) -> (vec Comment) query;
    "like_comment": (text, nat64, nat64) -> ();
    "dislike_comment": (text, nat64, nat64) -> ();
    "user_has_liked_comment": (text, nat64, nat64) -> (bool) query;
    "user_has_disliked_comment": (text, nat64, nat64) -> (bool) query;
}
